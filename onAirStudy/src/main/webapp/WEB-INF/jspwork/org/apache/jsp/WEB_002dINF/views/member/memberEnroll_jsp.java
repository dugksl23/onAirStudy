/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.57
<<<<<<< HEAD
 * Generated at: 2020-10-15 12:39:05 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.member;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class memberEnroll_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(4);
    _jspx_dependants.put("/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar", Long.valueOf(1601381919106L));
    _jspx_dependants.put("jar:file:/C:/Users/BDJ/Documents/spring_workspace/.metadata/.plugins/org.eclipse.wst.server.core/tmp2/wtpwebapps/onAirStudy/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar!/META-INF/fn.tld", Long.valueOf(1425946270000L));
    _jspx_dependants.put("jar:file:/C:/Users/BDJ/Documents/spring_workspace/.metadata/.plugins/org.eclipse.wst.server.core/tmp2/wtpwebapps/onAirStudy/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar!/META-INF/fmt.tld", Long.valueOf(1425946270000L));
    _jspx_dependants.put("jar:file:/C:/Users/BDJ/Documents/spring_workspace/.metadata/.plugins/org.eclipse.wst.server.core/tmp2/wtpwebapps/onAirStudy/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar!/META-INF/c.tld", Long.valueOf(1425946270000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/WEB-INF/views/common/header.jsp" + "?" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("title", request.getCharacterEncoding())+ "=" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("회원등록", request.getCharacterEncoding()), out, false);
      out.write("\r\n");
      out.write("<link rel=\"stylesheet\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ pageContext.request.contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/css/member.css\" />\r\n");
      out.write("\r\n");
      out.write("<div id=\"enroll-container\" class=\"mx-auto text-center\">\r\n");
      out.write("\t<form id=\"memberEnrollFrm\" \r\n");
      out.write("\t\t  action=\"memberEnroll.do\" \r\n");
      out.write("\t\t  method=\"post\">\r\n");
      out.write("\t\t<table class=\"mx-auto\">\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<th>아이디<span>*</span></th>\r\n");
      out.write("\t\t\t\t<td>\r\n");
      out.write("\t\t\t\t\t<div id=\"memberId-container\">\r\n");
      out.write("\t\t\t\t\t\t<input type=\"text\" \r\n");
      out.write("\t\t\t\t\t\t\t   class=\"form-control\" \r\n");
      out.write("\t\t\t\t\t\t\t   placeholder=\"4글자이상\"\r\n");
      out.write("\t\t\t\t\t\t\t   name=\"memberId\" \r\n");
      out.write("\t\t\t\t\t\t\t   id=\"memberId_\"\r\n");
      out.write("\t\t\t\t\t\t\t   required>\r\n");
      out.write("\t\t\t\t\t\t <span class=\"guide ok\">이 아이디는 사용가능합니다.</span>\r\n");
      out.write("\t\t\t\t\t\t<span class=\"guide error\">이 아이디는 사용할 수 없습니다.</span> \r\n");
      out.write("\t\t\t\t\t\t<!-- 0:사용불가, 1:사용가능 -->\r\n");
      out.write("\t\t\t\t\t\t<input type=\"hidden\" id=\"idValid\" value=\"0\" />\r\n");
      out.write("\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<th>패스워드<span>*</span></th>\r\n");
      out.write("\t\t\t\t<td>\r\n");
      out.write("\t\t\t\t\t<input type=\"password\" class=\"form-control\" name=\"password\" id=\"password_\" required>\r\n");
      out.write("\t\t\t\t</td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<th>패스워드확인<span>*</span></th>\r\n");
      out.write("\t\t\t\t<td>\t\r\n");
      out.write("\t\t\t\t\t<input type=\"password\" class=\"form-control\" id=\"password2\" required>\r\n");
      out.write("\t\t\t\t</td>\r\n");
      out.write("\t\t\t</tr>  \r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<th>이름<span>*</span></th>\r\n");
      out.write("\t\t\t\t<td>\t\r\n");
      out.write("\t\t\t\t\t<input type=\"text\" class=\"form-control\" name=\"memberName\" id=\"memberName\" required>\r\n");
      out.write("\t\t\t\t</td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<th>휴대폰 본인 인증<span>*</span></th>\r\n");
      out.write("\t\t\t\t<td>\t\r\n");
      out.write("\t\t\t\t\t<input type=\"tel\" class=\"form-control\" placeholder=\"(-없이)01012345678\" name=\"phone\" id=\"phone\" maxlength=\"11\" required>\r\n");
      out.write("\t\t\t\t</td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<th>자기소개</th>\r\n");
      out.write("\t\t\t\t<td>\t\r\n");
      out.write("\t\t\t\t\t<input type=\"text\" class=\"form-control\" placeholder=\"15글자 이내로 적어주세요\" name=\"comment\" id=\"comment\" maxlength=\"11\" size=\"15\" >\r\n");
      out.write("\t\t\t\t</td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<th>관심카테고리<span>*</span></th>\r\n");
      out.write("\t\t\t\t<td>\r\n");
      out.write("\t\t\t\t\t<div class=\"form-check form-check-inline\">\r\n");
      out.write("\t\t\t\t\t\t<input type=\"radio\" class=\"form-check-input\" name=\"category\" id=\"category1\" value=\"1\" checked><label  class=\"form-check-label\" for=\"category1\">자격증</label>&nbsp;\r\n");
      out.write("\t\t\t\t\t\t<input type=\"radio\" class=\"form-check-input\" name=\"category\" id=\"category2\" value=\"2\"><label  class=\"form-check-label\" for=\"category2\">면접</label>\r\n");
      out.write("\t\t\t\t\t\t<input type=\"radio\" class=\"form-check-input\" name=\"category\" id=\"category3\" value=\"3\"><label  class=\"form-check-label\" for=\"category3\">입시</label>&nbsp;\r\n");
      out.write("\t\t\t\t\t\t<input type=\"radio\" class=\"form-check-input\" name=\"category\" id=\"category4\" value=\"4\"><label  class=\"form-check-label\" for=\"category4\">취미/예술</label>\r\n");
      out.write("\t\t\t\t\t\t<input type=\"radio\" class=\"form-check-input\" name=\"category\" id=\"category5\" value=\"5\"><label  class=\"form-check-label\" for=\"category5\">컴퓨터/IT</label>&nbsp;\r\n");
      out.write("\t\t\t\t\t\t<input type=\"radio\" class=\"form-check-input\" name=\"category\" id=\"category6\" value=\"6\"><label  class=\"form-check-label\" for=\"category6\">창업</label>\r\n");
      out.write("\t\t\t\t\t\t<input type=\"radio\" class=\"form-check-input\" name=\"category\" id=\"category7\" value=\"7\"><label  class=\"form-check-label\" for=\"category7\">어학</label>&nbsp;\r\n");
      out.write("\t\t\t\t\t\t<input type=\"radio\" class=\"form-check-input\" name=\"category\" id=\"category8\" value=\"8\"><label  class=\"form-check-label\" for=\"category8\">기타</label>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t</table>\r\n");
      out.write("\t\t<input type=\"submit\" value=\"가입완료\" >\r\n");
      out.write("\t\t<input type=\"reset\" value=\"취소\">\r\n");
      out.write("\t</form>\r\n");
      out.write("</div>\r\n");
      out.write("<script>\r\n");
      out.write("$(\"#memberId_\").keyup(function(){\r\n");
      out.write("\tvar $this = $(this);\r\n");
      out.write("\r\n");
      out.write("\t//처음 작성 또는 재작성하는 경우\r\n");
      out.write("\tif($this.val().length < 4){\r\n");
      out.write("\t\t$(\".guide\").hide();\r\n");
      out.write("\t\t$(\"#idValid\").val(0);\r\n");
      out.write("\t\treturn;\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("\tconsole.log($this.val());\r\n");
      out.write("\r\n");
      out.write("\t$.ajax({\r\n");
      out.write("\t\turl : \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ pageContext.request.contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/member/checkIdDuplicate.do\",\r\n");
      out.write("\t\tdata : {\r\n");
      out.write("\t\t\tmemberId : $this.val()\r\n");
      out.write("\t\t},\r\n");
      out.write("\t\tmethod : \"GET\",\r\n");
      out.write("\t\tdataType : \"json\",\r\n");
      out.write("\t\tsuccess : function(data){\r\n");
      out.write("\t\t\tconsole.log(data);\r\n");
      out.write("\t\t\tvar $ok = $(\".guide.ok\");\r\n");
      out.write("\t\t\tvar $error = $(\".guide.error\");\r\n");
      out.write("\t\t\tvar $idValid = $(\"#idValid\");\r\n");
      out.write("\r\n");
      out.write("\t\t\tif(data.isAvailable){\r\n");
      out.write("\t\t\t\t//아이디사용가능한 경우\r\n");
      out.write("\t\t\t\t$ok.show();\r\n");
      out.write("\t\t\t\t$error.hide();\r\n");
      out.write("\t\t\t\t$idValid.val(1);\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\telse{\r\n");
      out.write("\t\t\t\t//아디디 사용불가능한 경우\r\n");
      out.write("\t\t\t\t$ok.hide();\r\n");
      out.write("\t\t\t\t$error.show();\r\n");
      out.write("\t\t\t\t$idValid.val(0);\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t},\r\n");
      out.write("\t\terror : function(xhr, status, err){\r\n");
      out.write("\t\t\tconsole.log(\"처리실패!\");\r\n");
      out.write("\t\t\tconsole.log(xhr);\r\n");
      out.write("\t\t\tconsole.log(status);\r\n");
      out.write("\t\t\tconsole.log(err);\r\n");
      out.write("\t\t}\r\n");
      out.write("\t});\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("});\r\n");
      out.write("\r\n");
      out.write("\t\r\n");
      out.write("$(\"#password2\").blur(function(){\r\n");
      out.write("\tvar $p1 = $(\"#password_\"), $p2 = $(\"#password2\");\r\n");
      out.write("\tif(p1.val() != p2.val()){\r\n");
      out.write("\t\talert(\"패스워드가 일치하지 않습니다.\");\r\n");
      out.write("\t\t$p1.focus();\r\n");
      out.write("\t}\r\n");
      out.write("});\r\n");
      out.write("\t\r\n");
      out.write("$(\"#memberEnrollFrm\").submit(function(){\r\n");
      out.write("\r\n");
      out.write("\t//html5 추가된 속성 pattern을 활용해 정규식 검사도 가능하지만,\r\n");
      out.write("\t//구체적인 피드백제공하지는 못한다.\r\n");
      out.write("\tvar $memberId = $(\"#memberId_\");\r\n");
      out.write("\tif(/^\\w{4,}$/.test($memberId.val()) == false) {\r\n");
      out.write("\t\talert(\"아이디는 최소 4자리이상이어야 합니다.\");\r\n");
      out.write("\t\t$memberId.focus();\r\n");
      out.write("\t\treturn false;\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("\t//사용자 아이디 중복여부\r\n");
      out.write("\tvar $idValid = $(\"#idValid\");\r\n");
      out.write("\tif($idValid.val() == 0){\r\n");
      out.write("\t\talert(\"사용가능한 아이디를 입력하세요.\");\r\n");
      out.write("\t\t$memberId.select();\r\n");
      out.write("\t\treturn false;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\treturn true;\r\n");
      out.write("});\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/WEB-INF/views/common/footer.jsp", out, false);
      out.write('\r');
=======
 * Generated at: 2020-10-15 11:55:40 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.member;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class memberEnroll_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(4);
    _jspx_dependants.put("/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar", Long.valueOf(1599824644000L));
    _jspx_dependants.put("jar:file:/Users/meonji/Documents/GitRepo/onAirStudy/onAirStudy/src/main/webapp/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar!/META-INF/fmt.tld", Long.valueOf(1425946270000L));
    _jspx_dependants.put("jar:file:/Users/meonji/Documents/GitRepo/onAirStudy/onAirStudy/src/main/webapp/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar!/META-INF/fn.tld", Long.valueOf(1425946270000L));
    _jspx_dependants.put("jar:file:/Users/meonji/Documents/GitRepo/onAirStudy/onAirStudy/src/main/webapp/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar!/META-INF/c.tld", Long.valueOf(1425946270000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/WEB-INF/views/common/header.jsp" + "?" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("title", request.getCharacterEncoding())+ "=" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("회원등록", request.getCharacterEncoding()), out, false);
      out.write("\n");
      out.write("<link rel=\"stylesheet\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ pageContext.request.contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/css/member.css\" />\n");
      out.write("\n");
      out.write("<div id=\"enroll-container\" class=\"mx-auto text-center\">\n");
      out.write("\t<form id=\"memberEnrollFrm\" \n");
      out.write("\t\t  action=\"memberEnroll.do\" \n");
      out.write("\t\t  method=\"post\">\n");
      out.write("\t\t<table class=\"mx-auto\">\n");
      out.write("\t\t\t<tr>\n");
      out.write("\t\t\t\t<th>아이디<span>*</span></th>\n");
      out.write("\t\t\t\t<td>\n");
      out.write("\t\t\t\t\t<div id=\"memberId-container\">\n");
      out.write("\t\t\t\t\t\t<input type=\"text\" \n");
      out.write("\t\t\t\t\t\t\t   class=\"form-control\" \n");
      out.write("\t\t\t\t\t\t\t   placeholder=\"4글자이상\"\n");
      out.write("\t\t\t\t\t\t\t   name=\"memberId\" \n");
      out.write("\t\t\t\t\t\t\t   id=\"memberId_\"\n");
      out.write("\t\t\t\t\t\t\t   required>\n");
      out.write("\t\t\t\t\t\t <span class=\"guide ok\">이 아이디는 사용가능합니다.</span>\n");
      out.write("\t\t\t\t\t\t<span class=\"guide error\">이 아이디는 사용할 수 없습니다.</span> \n");
      out.write("\t\t\t\t\t\t<!-- 0:사용불가, 1:사용가능 -->\n");
      out.write("\t\t\t\t\t\t<input type=\"hidden\" id=\"idValid\" value=\"0\" />\n");
      out.write("\t\t\t\t\t\t\n");
      out.write("\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t</td>\n");
      out.write("\t\t\t</tr>\n");
      out.write("\t\t\t<tr>\n");
      out.write("\t\t\t\t<th>패스워드<span>*</span></th>\n");
      out.write("\t\t\t\t<td>\n");
      out.write("\t\t\t\t\t<input type=\"password\" class=\"form-control\" name=\"password\" id=\"password_\" required>\n");
      out.write("\t\t\t\t</td>\n");
      out.write("\t\t\t</tr>\n");
      out.write("\t\t\t<tr>\n");
      out.write("\t\t\t\t<th>패스워드확인<span>*</span></th>\n");
      out.write("\t\t\t\t<td>\t\n");
      out.write("\t\t\t\t\t<input type=\"password\" class=\"form-control\" id=\"password2\" required>\n");
      out.write("\t\t\t\t</td>\n");
      out.write("\t\t\t</tr>  \n");
      out.write("\t\t\t<tr>\n");
      out.write("\t\t\t\t<th>이름<span>*</span></th>\n");
      out.write("\t\t\t\t<td>\t\n");
      out.write("\t\t\t\t\t<input type=\"text\" class=\"form-control\" name=\"memberName\" id=\"memberName\" required>\n");
      out.write("\t\t\t\t</td>\n");
      out.write("\t\t\t</tr>\n");
      out.write("\t\t\t<tr>\n");
      out.write("\t\t\t\t<th>휴대폰 본인 인증<span>*</span></th>\n");
      out.write("\t\t\t\t<td>\t\n");
      out.write("\t\t\t\t\t<input type=\"tel\" class=\"form-control\" placeholder=\"(-없이)01012345678\" name=\"phone\" id=\"phone\" maxlength=\"11\" required>\n");
      out.write("\t\t\t\t</td>\n");
      out.write("\t\t\t</tr>\n");
      out.write("\t\t\t<tr>\n");
      out.write("\t\t\t\t<th>자기소개</th>\n");
      out.write("\t\t\t\t<td>\t\n");
      out.write("\t\t\t\t\t<input type=\"text\" class=\"form-control\" placeholder=\"15글자 이내로 적어주세요\" name=\"comment\" id=\"comment\" maxlength=\"11\" size=\"15\" >\n");
      out.write("\t\t\t\t</td>\n");
      out.write("\t\t\t</tr>\n");
      out.write("\t\t\t<tr>\n");
      out.write("\t\t\t\t<th>관심카테고리<span>*</span></th>\n");
      out.write("\t\t\t\t<td>\n");
      out.write("\t\t\t\t\t<div class=\"form-check form-check-inline\">\n");
      out.write("\t\t\t\t\t\t<input type=\"radio\" class=\"form-check-input\" name=\"category\" id=\"category1\" value=\"1\" checked><label  class=\"form-check-label\" for=\"category1\">자격증</label>&nbsp;\n");
      out.write("\t\t\t\t\t\t<input type=\"radio\" class=\"form-check-input\" name=\"category\" id=\"category2\" value=\"2\"><label  class=\"form-check-label\" for=\"category2\">면접</label>\n");
      out.write("\t\t\t\t\t\t<input type=\"radio\" class=\"form-check-input\" name=\"category\" id=\"category3\" value=\"3\"><label  class=\"form-check-label\" for=\"category3\">입시</label>&nbsp;\n");
      out.write("\t\t\t\t\t\t<input type=\"radio\" class=\"form-check-input\" name=\"category\" id=\"category4\" value=\"4\"><label  class=\"form-check-label\" for=\"category4\">취미/예술</label>\n");
      out.write("\t\t\t\t\t\t<input type=\"radio\" class=\"form-check-input\" name=\"category\" id=\"category5\" value=\"5\"><label  class=\"form-check-label\" for=\"category5\">컴퓨터/IT</label>&nbsp;\n");
      out.write("\t\t\t\t\t\t<input type=\"radio\" class=\"form-check-input\" name=\"category\" id=\"category6\" value=\"6\"><label  class=\"form-check-label\" for=\"category6\">창업</label>\n");
      out.write("\t\t\t\t\t\t<input type=\"radio\" class=\"form-check-input\" name=\"category\" id=\"category7\" value=\"7\"><label  class=\"form-check-label\" for=\"category7\">어학</label>&nbsp;\n");
      out.write("\t\t\t\t\t\t<input type=\"radio\" class=\"form-check-input\" name=\"category\" id=\"category8\" value=\"8\"><label  class=\"form-check-label\" for=\"category8\">기타</label>\n");
      out.write("\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t</td>\n");
      out.write("\t\t\t</tr>\n");
      out.write("\t\t\t\n");
      out.write("\t\t</table>\n");
      out.write("\t\t<input type=\"submit\" value=\"가입완료\" >\n");
      out.write("\t\t<input type=\"reset\" value=\"취소\">\n");
      out.write("\t</form>\n");
      out.write("</div>\n");
      out.write("<script>\n");
      out.write("$(\"#memberId_\").keyup(function(){\n");
      out.write("\tvar $this = $(this);\n");
      out.write("\n");
      out.write("\t//처음 작성 또는 재작성하는 경우\n");
      out.write("\tif($this.val().length < 4){\n");
      out.write("\t\t$(\".guide\").hide();\n");
      out.write("\t\t$(\"#idValid\").val(0);\n");
      out.write("\t\treturn;\n");
      out.write("\t}\n");
      out.write("\n");
      out.write("\tconsole.log($this.val());\n");
      out.write("\n");
      out.write("\t$.ajax({\n");
      out.write("\t\turl : \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ pageContext.request.contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/member/checkIdDuplicate.do\",\n");
      out.write("\t\tdata : {\n");
      out.write("\t\t\tmemberId : $this.val()\n");
      out.write("\t\t},\n");
      out.write("\t\tmethod : \"GET\",\n");
      out.write("\t\tdataType : \"json\",\n");
      out.write("\t\tsuccess : function(data){\n");
      out.write("\t\t\tconsole.log(data);\n");
      out.write("\t\t\tvar $ok = $(\".guide.ok\");\n");
      out.write("\t\t\tvar $error = $(\".guide.error\");\n");
      out.write("\t\t\tvar $idValid = $(\"#idValid\");\n");
      out.write("\n");
      out.write("\t\t\tif(data.isAvailable){\n");
      out.write("\t\t\t\t//아이디사용가능한 경우\n");
      out.write("\t\t\t\t$ok.show();\n");
      out.write("\t\t\t\t$error.hide();\n");
      out.write("\t\t\t\t$idValid.val(1);\n");
      out.write("\t\t\t}\n");
      out.write("\t\t\telse{\n");
      out.write("\t\t\t\t//아디디 사용불가능한 경우\n");
      out.write("\t\t\t\t$ok.hide();\n");
      out.write("\t\t\t\t$error.show();\n");
      out.write("\t\t\t\t$idValid.val(0);\n");
      out.write("\t\t\t}\n");
      out.write("\t\t\t\n");
      out.write("\t\t},\n");
      out.write("\t\terror : function(xhr, status, err){\n");
      out.write("\t\t\tconsole.log(\"처리실패!\");\n");
      out.write("\t\t\tconsole.log(xhr);\n");
      out.write("\t\t\tconsole.log(status);\n");
      out.write("\t\t\tconsole.log(err);\n");
      out.write("\t\t}\n");
      out.write("\t});\n");
      out.write("\t\n");
      out.write("\t\n");
      out.write("});\n");
      out.write("\n");
      out.write("\t\n");
      out.write("$(\"#password2\").blur(function(){\n");
      out.write("\tvar $p1 = $(\"#password_\"), $p2 = $(\"#password2\");\n");
      out.write("\tif(p1.val() != p2.val()){\n");
      out.write("\t\talert(\"패스워드가 일치하지 않습니다.\");\n");
      out.write("\t\t$p1.focus();\n");
      out.write("\t}\n");
      out.write("});\n");
      out.write("\t\n");
      out.write("$(\"#memberEnrollFrm\").submit(function(){\n");
      out.write("\n");
      out.write("\t//html5 추가된 속성 pattern을 활용해 정규식 검사도 가능하지만,\n");
      out.write("\t//구체적인 피드백제공하지는 못한다.\n");
      out.write("\tvar $memberId = $(\"#memberId_\");\n");
      out.write("\tif(/^\\w{4,}$/.test($memberId.val()) == false) {\n");
      out.write("\t\talert(\"아이디는 최소 4자리이상이어야 합니다.\");\n");
      out.write("\t\t$memberId.focus();\n");
      out.write("\t\treturn false;\n");
      out.write("\t}\n");
      out.write("\n");
      out.write("\t//사용자 아이디 중복여부\n");
      out.write("\tvar $idValid = $(\"#idValid\");\n");
      out.write("\tif($idValid.val() == 0){\n");
      out.write("\t\talert(\"사용가능한 아이디를 입력하세요.\");\n");
      out.write("\t\t$memberId.select();\n");
      out.write("\t\treturn false;\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\t\n");
      out.write("\treturn true;\n");
      out.write("});\n");
      out.write("</script>\n");
      out.write("\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/WEB-INF/views/common/footer.jsp", out, false);
>>>>>>> branch 'master' of https://github.com/ekfhdwld/onAirStudy.git
      out.write('\n');
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
