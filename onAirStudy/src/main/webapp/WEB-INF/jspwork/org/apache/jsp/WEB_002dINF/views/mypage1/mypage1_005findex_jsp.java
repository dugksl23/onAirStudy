/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.57
 * Generated at: 2020-10-18 03:10:42 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.mypage1;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class mypage1_005findex_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');
      out.write("\r\n");
      out.write("<fmt:requestEncoding value=\"utf-8\" />\r\n");
      out.write("\r\n");
      out.write("\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/WEB-INF/views/common/header.jsp", out, false);
      out.write('\r');
      out.write('\n');
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/WEB-INF/views/mypage1/mypageSideBar.jsp", out, false);
      out.write("\r\n");
      out.write("<!-- 차트 링크 -->\r\n");
      out.write("<script src=\"https://cdn.jsdelivr.net/npm/chart.js@2.8.0\"></script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<div class=\"container-fluid mypage1-index-div\"\r\n");
      out.write("\tstyle=\"background-color: rgb(249, 241, 237); display: inline-block;\">\r\n");
      out.write("\t<h1>My page</h1>\r\n");
      out.write("\t<hr>\r\n");
      out.write("\t<div>\r\n");
      out.write("\t\t<h3>그룹 내 나의 출석률</h3>\r\n");
      out.write("\t\t<div class=\"col-md-5\">\r\n");
      out.write("\t\t\t<canvas id=\"myChart\" style=\"max-width: 550px; padding:0; margin:0;margin-top:-3em;\"></canvas>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<script>\r\n");
      out.write("\t\t\tvar ctx = document.getElementById(\"myChart\").getContext('2d');\r\n");
      out.write("\r\n");
      out.write("\t\t\tvar myChart = new Chart(ctx, {\r\n");
      out.write("\t\t\t\ttype : 'bar',\r\n");
      out.write("\t\t\t\tdata : {\r\n");
      out.write("\t\t\t\t\tlabels : [ \"6월\", \"7월\", \"8월\", \"9월\", \"10월\", \"11월\" ],\r\n");
      out.write("\t\t\t\t\tdatasets : [ {\r\n");
      out.write("\t\t\t\t\t\tlabel : '출석률',\r\n");
      out.write("\t\t\t\t\t\tdata : [ 12, 19, 3, 5, 2, 3 ],\r\n");
      out.write("\t\t\t\t\t\tbackgroundColor : [ 'rgba(255, 99, 132, 0.2)',\r\n");
      out.write("\t\t\t\t\t\t\t\t'rgba(54, 162, 235, 0.2)',\r\n");
      out.write("\t\t\t\t\t\t\t\t'rgba(255, 206, 86, 0.2)',\r\n");
      out.write("\t\t\t\t\t\t\t\t'rgba(75, 192, 192, 0.2)',\r\n");
      out.write("\t\t\t\t\t\t\t\t'rgba(153, 102, 255, 0.2)',\r\n");
      out.write("\t\t\t\t\t\t\t\t'rgba(255, 159, 64, 0.2)' ],\r\n");
      out.write("\t\t\t\t\t\tborderColor : [ 'rgba(255,99,132,1)',\r\n");
      out.write("\t\t\t\t\t\t\t\t'rgba(54, 162, 235, 1)',\r\n");
      out.write("\t\t\t\t\t\t\t\t'rgba(255, 206, 86, 1)',\r\n");
      out.write("\t\t\t\t\t\t\t\t'rgba(75, 192, 192, 1)',\r\n");
      out.write("\t\t\t\t\t\t\t\t'rgba(153, 102, 255, 1)',\r\n");
      out.write("\t\t\t\t\t\t\t\t'rgba(255, 159, 64, 1)' ],\r\n");
      out.write("\t\t\t\t\t\tborderWidth : 1\r\n");
      out.write("\t\t\t\t\t} ]\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\toptions : {\r\n");
      out.write("\t\t\t\t\tscales : {\r\n");
      out.write("\t\t\t\t\t\tyAxes : [ {\r\n");
      out.write("\t\t\t\t\t\t\tticks : {\r\n");
      out.write("\t\t\t\t\t\t\t\tbeginAtZero : true\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t} ]\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t</script>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<h3>\r\n");
      out.write("\t\t오늘의 To Do List\r\n");
      out.write("\t\t<button type=\"button\" class=\"btn btn-light\">캘린더 보기</button>\r\n");
      out.write("\t</h3>\r\n");
      out.write("\t<h3>\r\n");
      out.write("\t\t일일 공부시간\r\n");
      out.write("\t\t<button type=\"button\" class=\"btn btn-light\">시간 등록하기</button>\r\n");
      out.write("\t</h3>\r\n");
      out.write("</div>\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/WEB-INF/views/common/footer.jsp", out, false);
      out.write('\r');
      out.write('\n');
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
