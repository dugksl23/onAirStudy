/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.57
 * Generated at: 2020-10-18 03:17:13 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.scheduler;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class scheduler_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(4);
    _jspx_dependants.put("/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar", Long.valueOf(1601381919106L));
    _jspx_dependants.put("jar:file:/C:/Users/BDJ/Documents/spring_workspace/.metadata/.plugins/org.eclipse.wst.server.core/tmp2/wtpwebapps/onAirStudy/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar!/META-INF/fn.tld", Long.valueOf(1425946270000L));
    _jspx_dependants.put("jar:file:/C:/Users/BDJ/Documents/spring_workspace/.metadata/.plugins/org.eclipse.wst.server.core/tmp2/wtpwebapps/onAirStudy/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar!/META-INF/fmt.tld", Long.valueOf(1425946270000L));
    _jspx_dependants.put("jar:file:/C:/Users/BDJ/Documents/spring_workspace/.metadata/.plugins/org.eclipse.wst.server.core/tmp2/wtpwebapps/onAirStudy/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar!/META-INF/c.tld", Long.valueOf(1425946270000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005ffmt_005frequestEncoding_0026_005fvalue_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fif_0026_005ftest;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005ffmt_005frequestEncoding_0026_005fvalue_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005ffmt_005frequestEncoding_0026_005fvalue_005fnobody.release();
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.release();
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      if (_jspx_meth_fmt_005frequestEncoding_005f0(_jspx_page_context))
        return;
      out.write('\r');
      out.write('\n');
      out.write("\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\" src=\"https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.24.0/moment.min.js\"></script>\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/WEB-INF/views/common/header.jsp", out, false);
      out.write('\r');
      out.write('\n');
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/WEB-INF/views/mypage1/mypageSideBar.jsp", out, false);
      out.write("\r\n");
      out.write("    <!-- 커스텀 -->\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/css/scheduler.css\" />\r\n");
      out.write("    \r\n");
      out.write("<!--컬러픽커-->\r\n");
      out.write("<script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/js/jquery.minicolors.js\"></script>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/css/jquery.minicolors.css\">\r\n");
      out.write("\r\n");
      out.write("<!--데이트픽커-->\r\n");
      out.write("<link href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/css/datepicker.min.css\" rel=\"stylesheet\" type=\"text/css\" media=\"all\">\r\n");
      out.write("<!-- Air datepicker css -->\r\n");
      out.write("<script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/js/datepicker.js\"></script> <!-- Air datepicker js -->\r\n");
      out.write("<script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/js/datepicker.ko.js\"></script> <!-- 달력 한글 추가를 위해 커스텀 -->\r\n");
      out.write("\r\n");
      out.write("<!-- 삭제나 업뎃했을때 -->\r\n");
      if (_jspx_meth_c_005fif_005f0(_jspx_page_context))
        return;
      out.write("  \r\n");
      out.write(" \r\n");
      if (_jspx_meth_c_005fif_005f1(_jspx_page_context))
        return;
      out.write("   \r\n");
      out.write("\r\n");
      out.write("  <div class='cal-divB'>\r\n");
      out.write("        <div class=\"infoB\">\r\n");
      out.write("        </div>\r\n");
      out.write("        <br/>\r\n");
      out.write("        <table class=\"tableB table\">\r\n");
      out.write("        \r\n");
      out.write("        </table>\r\n");
      out.write("        </div>\r\n");
      out.write("\r\n");
      out.write("\t\t<!-- 메뉴바  -->\r\n");
      out.write("        <div class=\"dropdown-menu dropB\"><p id=\"pXB\">X</p>\r\n");
      out.write("            <button class=\"dropdown-item btn btn-primary\" data-toggle=\"modal\" onclick=\"insertForm(this.value);\" data-target=\"#iuschedule\">일정 등록</button>\r\n");
      out.write("            <button class=\"dropdown-item btn btn-primary\" data-toggle=\"modal\" onclick=\"viewSchedule(this.value);\" data-target=\"#viewSchedule\">일정 보기</button>\r\n");
      out.write("            <button class=\"dropdown-item btn btn-primary\" data-toggle=\"modal\" onclick=\"viewTodoList(this.value);\" data-target=\"#viewTodoList\">To do List</button>\r\n");
      out.write("          </div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("          <!-- 일정등록 모달 -->\r\n");
      out.write("          <div class=\"modal\" id=\"iuschedule\" tabindex=\"-1\">\r\n");
      out.write("            <div class=\"modal-dialog\">\r\n");
      out.write("              <div class=\"modal-content\">\r\n");
      out.write("                <div class=\"modal-header\">\r\n");
      out.write("                  <h5 class=\"modal-title\" id=\"titleB\">일정 등록</h5>\r\n");
      out.write("                  <button type=\"button\" class=\"close\" data-dismiss=\"modal\" id=\"openB\" aria-label=\"Close\">\r\n");
      out.write("                    <span aria-hidden=\"true\">&times;</span>\r\n");
      out.write("                  </button>\r\n");
      out.write("                </div>\r\n");
      out.write("\r\n");
      out.write("                <!-- 등록하는 부분 -->\r\n");
      out.write("                <div class=\"modal-body\">\r\n");
      out.write("                    <form id=\"iuscheduleFrm\" method=\"post\">\r\n");
      out.write("                        \r\n");
      out.write("                        <input type=\"hidden\" name=\"memberId\" value=\"honggd\" />\r\n");
      out.write("                        <input type=\"hidden\" name=\"no\" value=\"0\" />\r\n");
      out.write("                        \r\n");
      out.write("\t\t\t\t\t\t<h3 style=\"margin-right:180px;\">날짜 입력</h3>\r\n");
      out.write("\t\t\t\t\t\t<br />\r\n");
      out.write("                        <input type=\"text\" class=\"datepick delB\" name=\"startDate\">  ~  \r\n");
      out.write("                        <input type=\"text\" class=\"datepick delB\" name=\"endDate\">\r\n");
      out.write("                        <br/>\r\n");
      out.write("                        <br/>\r\n");
      out.write("\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t<h3 style=\"margin-right:180px;\">내용 입력</h3>\r\n");
      out.write("\t\t\t\t\t\t<br />\r\n");
      out.write("                        <input type=\"text\" class=\"marginB delB\" name=\"content\" style=\"width: 300px;\" placeholder=\"내용 입력\">\r\n");
      out.write("                        <br/>\r\n");
      out.write("                        <br/>\r\n");
      out.write("                        \r\n");
      out.write("                        <label for=\"hidden-input\">형광펜 색상 선택 : </label>\r\n");
      out.write("                        <input type=\"hidden\" id=\"hidden-input\" class=\"demo\" name=\"colorCode\">\r\n");
      out.write("                        <br/>\r\n");
      out.write("                        <br/>\r\n");
      out.write("\r\n");
      out.write("                        <label for=\"timeOption\">시간설정 : \r\n");
      out.write("                        \r\n");
      out.write("                        <select class=\"makeSelB\" name=\"timeOption\" id=\"time1\">\r\n");
      out.write("                        \t<option value=\"후다닥\">다닥</option>\r\n");
      out.write("                        </select>\r\n");
      out.write("                        \t\r\n");
      out.write("                        <select class=\"makeSelB\" name=\"timeOption\" id=\"time2\">\r\n");
      out.write("                        \t<option value=\"후다닥\">다닥</option>\r\n");
      out.write("                        </select>\r\n");
      out.write("                        </label>\r\n");
      out.write("                        <input type=\"hidden\" name=\"timeOpt\" val=\"\" />\r\n");
      out.write("\r\n");
      out.write("                        <br/>\r\n");
      out.write("                        <br/>\r\n");
      out.write("\r\n");
      out.write("                        <input type=\"checkbox\" name=\"DYN\" value=\"\">\r\n");
      out.write("                        <label for=\"DYN\">디데이 일정으로 등록하기</label>\r\n");
      out.write("                        <input type=\"hidden\" name=\"scheduleYN\" value=\"Y\" />\r\n");
      out.write("\r\n");
      out.write("                        <br/>\r\n");
      out.write("                        <br/>\r\n");
      out.write("\r\n");
      out.write("                    </form>\r\n");
      out.write("                </div>\r\n");
      out.write("                <div class=\"modal-footer\" id=\"footerB\">\r\n");
      out.write("                    <button type=\"button\" id=\"subB\" class=\"btn btn-primary\">등록하기</button>\r\n");
      out.write("                </div>\r\n");
      out.write("              </div>\r\n");
      out.write("            </div>\r\n");
      out.write("          </div>\r\n");
      out.write("          \r\n");
      out.write("          \r\n");
      out.write("          \r\n");
      out.write("          \r\n");
      out.write("          <!-- 일정보기모달 -->\r\n");
      out.write("          <div class=\"modal\" id=\"viewSchedule\" tabindex=\"0\">\r\n");
      out.write("            <div class=\"modal-dialog\">\r\n");
      out.write("              <div class=\"modal-content\">\r\n");
      out.write("                <div class=\"modal-header\">\r\n");
      out.write("                  <h5 class=\"modal-title\" id=\"theDateB\">일정 보기</h5>\r\n");
      out.write("                  <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n");
      out.write("                    <span aria-hidden=\"true\">&times;</span>\r\n");
      out.write("                  </button>\r\n");
      out.write("                </div>\r\n");
      out.write("\r\n");
      out.write("          \t\t <div class=\"modal-body\" id=\"viewBody\">\r\n");
      out.write("\t\t\t\t\t<table class=\"table\" id=\"viewTable\">\r\n");
      out.write("\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t</table>\t\r\n");
      out.write("                </div>\r\n");
      out.write("                <div class=\"modal-footer\">\r\n");
      out.write("                </div>\r\n");
      out.write("              </div>\r\n");
      out.write("            </div>\r\n");
      out.write("          </div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t\t<!-- To do list 모달창 -->\r\n");
      out.write("          <div class=\"modal\" id=\"viewTodoList\" tabindex=\"0\">\r\n");
      out.write("            <div class=\"modal-dialog\">\r\n");
      out.write("              <div class=\"modal-content\">\r\n");
      out.write("                <div class=\"modal-header\">\r\n");
      out.write("                  <h5 class=\"modal-title\" id=\"todoDateB\">2020년 10월 18일</h5>\r\n");
      out.write("                  <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n");
      out.write("                    <span aria-hidden=\"true\">&times;</span>\r\n");
      out.write("                  </button>\r\n");
      out.write("                </div>\r\n");
      out.write("                <div class=\"modal-body\">\r\n");
      out.write("\t\t\t\t<h5>To do List</h5>\r\n");
      out.write("\t\t\t\t<form id=\"storeTodoFrm\" method=\"POST\">\r\n");
      out.write("\t\t\t\t\t<table class=\"table\" id=\"todoTable\">\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t</table>\t\r\n");
      out.write("\t\t\t\t\t<table class=\"table\" id=\"addTableTodo\">\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t</table>\t\r\n");
      out.write("\t\t\t\t</form>\r\n");
      out.write("                </div>\r\n");
      out.write("                <div class=\"modal-footer\">\r\n");
      out.write("                    <button type=\"button\" onclick=\"deleteTodoBtn();\" class=\"btn btn-danger\">모두삭제</button>\r\n");
      out.write("                    <button type=\"button\" id=\"storeTodo\" class=\"btn btn-primary\">저장하기</button>\r\n");
      out.write("                </div>\r\n");
      out.write("              </div>\r\n");
      out.write("            </div>\r\n");
      out.write("          </div>\r\n");
      out.write("          \r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    \r\n");
      out.write("    <script>\r\n");
      out.write("\r\n");
      out.write("    function deleteTodoBtn(){\r\n");
      out.write("\t\tvar thisDate = $(\"#todoDateB\").html();\r\n");
      out.write("\t\tvar Frm = $(\"#storeTodoFrm\");\r\n");
      out.write("\t\tFrm.append($('<input/>', {type:'hidden', name:'startDate', value: thisDate }));\r\n");
      out.write("\t\tFrm.attr(\"action\", \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ pageContext.request.contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/scheduler/delTodo.do\");\r\n");
      out.write("\r\n");
      out.write("\t\tif(confirm(\"모두 삭제하시겠습니까?\"))\r\n");
      out.write("\t\t\tFrm.submit();\r\n");
      out.write("\r\n");
      out.write("     }\r\n");
      out.write("\r\n");
      out.write("    //todo폼 인서트\r\n");
      out.write("    $(document).ready(function(){\r\n");
      out.write("\t\t$(\"#storeTodo\").click(function(){\r\n");
      out.write("\t\t\tvar checkB = $(\"#todoTable input:checkbox\");\r\n");
      out.write("\r\n");
      out.write("\t\t\tvar Frm = $(\"#storeTodoFrm\");\r\n");
      out.write("\t\t\tvar startD = $(\"#todoDateB\").text();\r\n");
      out.write("\r\n");
      out.write("\t\t\tif(checkB.length == 0 ){\r\n");
      out.write("\t\t\t\talert(\"리스트를 입력해주세요.\");\r\n");
      out.write("\t\t\t\treturn;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t//날짜입력\r\n");
      out.write("\t\t\tFrm.append($('<input/>', {type:'hidden', name:'startDate', value: startD }));\r\n");
      out.write("\r\n");
      out.write("\t\t\tcheckB.each(function(i, item){ \r\n");
      out.write("\t\t\t\t//내용과 enabled 여부\r\n");
      out.write("\t\t\t\tFrm.append($('<input/>', {type:'hidden', name:'content', value: item.value }));\r\n");
      out.write("\t\t\t\tFrm.append($('<input/>', {type:'hidden', name:'checked', value: item.checked }));\r\n");
      out.write("\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\tFrm.attr(\"action\", \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ pageContext.request.contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/scheduler/todo.do\");\r\n");
      out.write("\r\n");
      out.write("\t\t\tif(confirm(\"저장하시겠습니까?\"))\r\n");
      out.write("\t\t\t\tFrm.submit();\r\n");
      out.write("\r\n");
      out.write("\t\t});\r\n");
      out.write("\r\n");
      out.write("    });\r\n");
      out.write("        \r\n");
      out.write("    \r\n");
      out.write("\r\n");
      out.write("    \r\n");
      out.write("\r\n");
      out.write("    //To do List 출력\r\n");
      out.write("    //delete로 해당날짜를 다 삭제한 후, insert하는 방식으로!\r\n");
      out.write("\tvar index = 0;\r\n");
      out.write("    function viewTodoList(e){\r\n");
      out.write("        $tbl = $(\"#todoTable\");\r\n");
      out.write("        $addT = $(\"#addTableTodo\");\r\n");
      out.write("        htmlB = \"\";\r\n");
      out.write("        $tbl.empty();\r\n");
      out.write("        $addT.empty();\r\n");
      out.write("\r\n");
      out.write("\t\t$(\"#todoDateB\").text(e);\r\n");
      out.write("\r\n");
      out.write("        \r\n");
      out.write("\t\tif(schedules.length > 0){\r\n");
      out.write("        \tfor(var i = 0 ; i<schedules.length ; i++){\r\n");
      out.write("\r\n");
      out.write("\t\t\t\tif(schedules[i].startDate == e && schedules[i].scheduleYN==\"N\" && schedules[i].dYN==\"N\"){\r\n");
      out.write("\t\t\t\t\thtmlB += \"<tr id='bb\"+index+\"'><td><input type='checkbox' class='chechBB' id='b\"+index+\"' value='\"+schedules[i].content+\"' style='display:none;'\";\r\n");
      out.write("\t\t\t\t\tif(schedules[i].enabledYN == \"Y\")\r\n");
      out.write("\t\t\t\t\t\thtmlB += \" checked\";\r\n");
      out.write("\t\t\t\t\thtmlB += \">\";\r\n");
      out.write("\t\t\t\t\thtmlB += \"<label for='b\"+index+\"' onclick='checkcheckB(b\"+index+\", this)' \";\r\n");
      out.write("\t\t\t\t\tif(schedules[i].enabledYN == \"Y\")\r\n");
      out.write("\t\t\t\t\t\thtmlB += \"style='text-decoration:line-through;'\";\r\n");
      out.write("\t\t\t\t\thtmlB += \">\"+schedules[i].content+\"</label></td>\";\r\n");
      out.write("\t\t\t\t\thtmlB += \"<td class='tdB'><button type='button' class='btn btn-light' onclick='deleteTodo(bb\"+index+\")'>x</button></td></tr>\";\r\n");
      out.write("\t\t\t\t\tindex++;\t\t\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("\t\t}\r\n");
      out.write("\t    \t$tbl.append(htmlB);\r\n");
      out.write("\r\n");
      out.write("\t    \t$(\".checkBB:checked label\").find(\"label\").css(\"text-decoration\", \"line-through\");\r\n");
      out.write("\t    \t\r\n");
      out.write("\r\n");
      out.write("        \thtmlB = \"<tr><td><input type='text' class='addTodoVal'/></td>\"\r\n");
      out.write("        \thtmlB += \"<td class='tdB'><button type='button' class='btn btn-light' onclick='addTodo();'>+</button></td></tr>\";\r\n");
      out.write("\r\n");
      out.write("\t\t\t$(\"#addTableTodo\").append(htmlB);\r\n");
      out.write("        \r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("\t//Todo삭제하기\r\n");
      out.write("\tfunction deleteTodo(id){\r\n");
      out.write("\t\t\tid.remove();\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("\t//Todo추가하기\r\n");
      out.write("\tfunction addTodo(){\r\n");
      out.write("\t\tvar valueB = $(\".addTodoVal\").val();\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tvar htmlB = \"\";\r\n");
      out.write("\r\n");
      out.write("\t\tif(valueB != null && valueB != \"\"){\r\n");
      out.write("\r\n");
      out.write("\t\thtmlB += \"<tr id='bb\"+index+\"'><td><input type='checkbox' class='chechBB' id='b\"+index+\"' value='\"+valueB+\"' style='display:none;'>\";\r\n");
      out.write("\t\thtmlB += \"<label for='b\"+index+\"' onclick='checkcheckB(b\"+index+\", this)'>\"+valueB+\"</label></td>\";\r\n");
      out.write("\t\thtmlB += \"<td class='tdB'><button type='button' class='btn btn-light' onclick='deleteTodo(bb\"+index+\")'>x</button></td></tr>\";\r\n");
      out.write("\r\n");
      out.write("\t\tindex++;\r\n");
      out.write("\r\n");
      out.write("\t\t$(\"#todoTable\").append(htmlB);\r\n");
      out.write("\t\t}else{\r\n");
      out.write("\t\t\talert(\"내용을 입력해주세요.\");\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\r\n");
      out.write("\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("\tfunction checkcheckB(check, lab){\r\n");
      out.write("\t\tconsole.log(check);\r\n");
      out.write("\t\tconsole.log(lab);\r\n");
      out.write("\r\n");
      out.write("\t\tif(check.checked == false){\r\n");
      out.write("\t\t\tlab.style.textDecoration = \"line-through\";\r\n");
      out.write("\t\t}else{\r\n");
      out.write("\t\t\tlab.style.textDecoration = \"none\";\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    //일정등록할때 인풋값 미리 넣어주기\r\n");
      out.write("\tfunction insertForm(e){\r\n");
      out.write("\t\tdocument.getElementById(\"titleB\").innerHTML = \"일정 등록\";\r\n");
      out.write("\t\t$(\"#subB\").html(\"등록하기\").attr(\"onclick\", \"subB(true)\");\r\n");
      out.write("\t    $(\"#iuschedule [name=startDate]\").val(e);\r\n");
      out.write("\t    $(\"#iuschedule [name=endDate]\").val(e);\r\n");
      out.write("\t    $(\".minicolors-swatch-color\").css(\"background-color\", \"#ff9191\");\r\n");
      out.write("\t    needBool = false;\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("\t//일정보기할때 일정 미리 넣어주기\r\n");
      out.write("\tfunction viewSchedule(theDate){\r\n");
      out.write("\r\n");
      out.write("\t\tvar htmlB = \"\";\r\n");
      out.write("\t\tvar count = 0;\r\n");
      out.write("\t\t//헤더에 날짜 넣어주기\r\n");
      out.write("\t\t$(\"#theDateB\").empty().append(theDate.substr(5, 2)+\"월 \"+theDate.substr(8)+\"일\");\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tif(schedules != null){\r\n");
      out.write("\t\t\tfor(var i in schedules){\r\n");
      out.write("\t\t\t\tif(schedules[i].startDate == theDate){\r\n");
      out.write("\t\t\t\t\tif(!(schedules[i].dYN == \"N\" &&schedules[i].scheduleYN==\"N\")){\r\n");
      out.write("\t\t\t\t\thtmlB += \"<tr><td>\"+schedules[i].content+\"<br/> ( \"+(schedules[i].timeOpt!=\"\" ? schedules[i].timeOpt : \"-\")+\" ) </td>\";\r\n");
      out.write("\t\t\t\t\thtmlB += \"<td class='tdB'><button type='button' class='btn btn-light' onclick='updateB(\"+schedules[i].no+\");'>수정</button></td>\"\r\n");
      out.write("\t\t\t\t\t\t\t+\"<td class='tdB'><button type='button' class='btn btn-light' onclick='deleteB(\"+schedules[i].no+\");'>삭제</button></td>\";\r\n");
      out.write("\t\t\t\t\thtmlB += \"</tr>\";\r\n");
      out.write("\t\t\t\t\tcount++;\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t}\t\t\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\tif(count==0)\r\n");
      out.write("\t\t\thtmlB += \"<tr colspan='3'><td>일정이 없습니다.</td></tr>\";\r\n");
      out.write("\t\t\r\n");
      out.write("        $(\"#viewTable\").empty().append(htmlB);\r\n");
      out.write("\r\n");
      out.write("        needBool = false;\r\n");
      out.write("\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\tvar needDate=\"\";\r\n");
      out.write("\t\tvar needBool = false;\r\n");
      out.write("\r\n");
      out.write("\t\t//select에서 해당시간 셀렉티드 하기\r\n");
      out.write("\t\tfunction updateB(no){\r\n");
      out.write("\r\n");
      out.write("\t\t\t$(\"#viewSchedule\").modal(\"hide\");\r\n");
      out.write("\t\t\tdocument.getElementById(\"titleB\").innerHTML = \"일정 수정\";\r\n");
      out.write("\t\t\t$(\"#subB\").html(\"수정하기\").attr(\"onclick\", \"subB(false)\");\r\n");
      out.write("\t\t\tneedBool = true;\r\n");
      out.write("\r\n");
      out.write("\t\t\tvar time1 = \"\";\r\n");
      out.write("\t\t\tvar time2 = \"\";\r\n");
      out.write("\t\t\tif(schedules != null){\r\n");
      out.write("\t\t\t\tfor(var i in schedules){\r\n");
      out.write("\t\t\t\t\tif(schedules[i].no == no){\r\n");
      out.write("\t\t\t\t\t\t$(\"[name=no]\").val(no);\r\n");
      out.write("\t\t\t\t\t\tneedDate = schedules[i].startDate;\r\n");
      out.write("\t\t\t\t\t\t$(\"[name=startDate]\").val(needDate);\r\n");
      out.write("\t\t\t\t\t\t$(\"[name=endDate]\").val(schedules[i].endDate);\r\n");
      out.write("\t\t\t\t\t\t$(\"[name=content]\").val(schedules[i].content);\r\n");
      out.write("\t\t\t\t\t\t$(\".minicolors-swatch-color\").css(\"background-color\", schedules[i].colorCode);\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\tif(schedules[i].timeOpt==\"\"){\r\n");
      out.write("\t\t\t\t\t\t\ttime1 = \"00:00\";\r\n");
      out.write("\t\t\t\t\t\t\ttime2 = \"00:00\";\r\n");
      out.write("\t\t\t\t\t\t}else{\r\n");
      out.write("\t\t\t\t\t\t\ttime1 = schedules[i].timeOpt.substr(0,5);\r\n");
      out.write("\t\t\t\t\t\t\ttime2 = schedules[i].timeOpt.substr(8);\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t$(\"#time1\").val(time1);\r\n");
      out.write("\t\t\t\t\t\t$(\"#time2\").val(time2);\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t$(\"#iuschedule\").modal(\"show\");\r\n");
      out.write("\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\treturn;\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t}\t\t\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t\t//일정 삭제 delete\r\n");
      out.write("\t\t \tfunction deleteB(no, day){\r\n");
      out.write("\t\t\t\tlocation.replace(\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ pageContext.request.contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/scheduler/delete.do?no=\"+no);\r\n");
      out.write("\r\n");
      out.write("\t\t\t \t\r\n");
      out.write("\t\t /* \t$.ajax({\r\n");
      out.write("\t\t\t\ttype:\"GET\",\r\n");
      out.write("\t\t\t\turl: \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ pageContext.request.contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/scheduler/delete.do?no=\"+no,\r\n");
      out.write("\t\t\t\terror:function(){\r\n");
      out.write("\t\t\t\t\talert(\"일정 삭제 실패\");\r\n");
      out.write("\t\t\t\t\t},\r\n");
      out.write("\t\t\t\tdataType:\"text\",\r\n");
      out.write("\t\t\t\tsuccess : function(data){\r\n");
      out.write("\t\t\t\t\talert(\"일정 삭제 성공\");\r\n");
      out.write("\t\t\t\t\tconsole.log(data);\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\tviewSchedule();\r\n");
      out.write("\t\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t}); */\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t//일정 등록 & 수정\r\n");
      out.write("    \tfunction subB(bool){\r\n");
      out.write("\r\n");
      out.write("\t\t\tvar action=\"\";\r\n");
      out.write("\r\n");
      out.write("\t\t\tif(bool)\r\n");
      out.write("\t\t\t\taction=\"insert.do\";\r\n");
      out.write("\t\t\telse\t\r\n");
      out.write("\t\t\t\taction=\"update.do\";\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("    \t\t$('#iuscheduleFrm').attr(\"action\",\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/scheduler/\"+action);\r\n");
      out.write("\r\n");
      out.write("     \t\tif(checkSub())\r\n");
      out.write("\t\t\t\t$('#iuscheduleFrm').submit();\r\n");
      out.write("\r\n");
      out.write("        \t}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    //요소 value들 체크해주기\r\n");
      out.write("    function checkSub(){\r\n");
      out.write("        \r\n");
      out.write("       \t/* timeOpt 값 설정 */\r\n");
      out.write("\t\tvar timeOpt = $(\"#time1\").val()+\" ~ \"+$(\"#time2\").val();\r\n");
      out.write("\t\t$(\"[name=timeOpt]\").val(timeOpt);\r\n");
      out.write("\r\n");
      out.write("\t\t/* dYn 값 설정 */\r\n");
      out.write("\t\tif($(\"[name=DYN]:checked\").length>0)\r\n");
      out.write("\t\t\t$(\"[name=DYN]\").val(\"Y\");\r\n");
      out.write("\t\telse\r\n");
      out.write("\t\t\t$(\"[name=DYN]\").val(\"N\");\r\n");
      out.write("\r\n");
      out.write("\t\t//혹시 모르는 색상코드 설정\r\n");
      out.write("\t\tif($(\"[name=colorCode]\").val()==\"\")\r\n");
      out.write("\t\t\t$(\"[name=colorCode]\").val(\"#ff9191\");\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\tconsole.log(\"디데이\"+$(\"[name=DYN]\").val());\r\n");
      out.write("\r\n");
      out.write("\t\t/* 디데이일 설정시 날짜맞춰주기 */\r\n");
      out.write("\t\tif($(\"[name=DYN]\").val()==\"Y\"){\r\n");
      out.write("\t\t\t$(\"[name=scheduleYN]\").val(\"N\");\r\n");
      out.write("\t\t\tif($(\"[name=startDate]\").val() != $(\"[name=endDate]\").val()){\r\n");
      out.write("\t\t\t\talert(\"디데이 날짜를 맞춰주세요.\");\r\n");
      out.write("\t\t\t\treturn false;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t/*내용확인*/\r\n");
      out.write("\t\tif($(\"[name=content]\").val()==\"\"){\r\n");
      out.write("\t\t\talert(\"내용을 입력해주세요.\");\r\n");
      out.write("\t\t\treturn false;\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\treturn true;\r\n");
      out.write("    \t\r\n");
      out.write("       }\r\n");
      out.write("    \r\n");
      out.write("\r\n");
      out.write("\t/* 모달창 시간생성 */\r\n");
      out.write("    $(document).ready(function(){\r\n");
      out.write("    \t$('.makeSelB').empty();\r\n");
      out.write("    \t \r\n");
      out.write("    \tvar option = \"\";\r\n");
      out.write("\r\n");
      out.write("    \tfor(var i = 0; i< 25 ; i++){      \r\n");
      out.write("        \t          \r\n");
      out.write("\t\t\tif(i<10){\r\n");
      out.write("\t      \t  option = $(\"<option>\"+\"0\"+i+\":00</option>\");\r\n");
      out.write("\t\t\t}else{\r\n");
      out.write("\t      \t  option = $(\"<option>\"+i+\":00</option>\");\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t$('.makeSelB').append(option);\r\n");
      out.write("    \t }\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("        });\r\n");
      out.write("\r\n");
      out.write("    \r\n");
      out.write("\t//컬러픽커\r\n");
      out.write("\t$(document).ready( function() {\r\n");
      out.write("\t\r\n");
      out.write("\t$('.demo').each( function() {\r\n");
      out.write("\t  $(this).minicolors({\r\n");
      out.write("\t    control: $(this).attr('data-control') || 'hue',\r\n");
      out.write("\t    defaultValue: $(this).attr('data-defaultValue') || '',\r\n");
      out.write("\t    format: $(this).attr('data-format') || 'hex',\r\n");
      out.write("\t    keywords: $(this).attr('data-keywords') || '',\r\n");
      out.write("\t    inline: $(this).attr('data-inline') === 'true',\r\n");
      out.write("\t    letterCase: $(this).attr('data-letterCase') || 'lowercase',\r\n");
      out.write("\t    opacity: $(this).attr('data-opacity'),\r\n");
      out.write("\t    position: $(this).attr('data-position') || 'bottom left',\r\n");
      out.write("\t    swatches: $(this).attr('data-swatches') ? $(this).attr('data-swatches').split('|') : [],\r\n");
      out.write("\t    change: function(value, opacity) {\r\n");
      out.write("\t      if( !value ) return;\r\n");
      out.write("\t        console.log(value);\r\n");
      out.write("\t        $(\"#hidden-input\").val(value);\r\n");
      out.write("\t      \r\n");
      out.write("\t    },\r\n");
      out.write("\t    theme: 'default'\r\n");
      out.write("\t  });\r\n");
      out.write("\t\r\n");
      out.write("\t});\r\n");
      out.write("\r\n");
      out.write("});\r\n");
      out.write("\r\n");
      out.write("            //모달창 데이트피커\r\n");
      out.write("           $(document).ready( function() {\r\n");
      out.write("                $(\".datepick\").datepicker({\r\n");
      out.write("                    language: 'ko',\r\n");
      out.write("                    dateFormat:\"yyyy-mm-dd\",\r\n");
      out.write("                    onSelect: function onSelect(e, date) {\r\n");
      out.write("\r\n");
      out.write("                    console.log(date);\r\n");
      out.write("                    console.log(e);\r\n");
      out.write("                    console.log($(this));\r\n");
      out.write("                    \r\n");
      out.write("                }\r\n");
      out.write("\r\n");
      out.write("                });\r\n");
      out.write("           });\r\n");
      out.write("\r\n");
      out.write("       \t//스케줄 가져올준비\r\n");
      out.write("           function schedule(no, srNo, startDate, endDate, content, colorCode, scheduleYN, timeOpt, dYN, enabledYN){\r\n");
      out.write("               this.no = no;\r\n");
      out.write("               this.srNo = srNo;\r\n");
      out.write("               this.startDate = startDate.substr(0,10);\r\n");
      out.write("               this.endDate = endDate.substr(0,10);\r\n");
      out.write("               this.content = content;\r\n");
      out.write("               this.colorCode = colorCode;\r\n");
      out.write("               this.scheduleYN = scheduleYN;\r\n");
      out.write("               this.timeOpt = timeOpt==\"00:00 ~ 00:00\" ? \"\" : timeOpt;\r\n");
      out.write("               this.dYN = dYN;\r\n");
      out.write("               this.enabledYN = enabledYN;\r\n");
      out.write("           }\r\n");
      out.write("           \r\n");
      out.write("           //디비에서 스케줄 가져오기  \r\n");
      out.write("           var schedules = Array (\r\n");
      out.write("           ");
      if (_jspx_meth_c_005fforEach_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("           );\r\n");
      out.write("\r\n");
      out.write("           //출력해보기\r\n");
      out.write("   \t\t$(document).ready(function(){\r\n");
      out.write("\t\t\tconsole.log(schedules);\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("       \t\t})\r\n");
      out.write("\r\n");
      out.write("           \r\n");
      out.write("           //기본 달력출력\r\n");
      out.write("           $(document).ready(function(){\r\n");
      out.write("\t\t\t\tif(\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ Y }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"== \"\" && \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ M }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"==\"\"){\r\n");
      out.write("\t               drawCalendar();\r\n");
      out.write("\t               return;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("               \r\n");
      out.write("               drawCalendar(\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ Y }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\", \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ M }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\");\r\n");
      out.write("\r\n");
      out.write("           });\r\n");
      out.write("\r\n");
      out.write("        \r\n");
      out.write("           $(document).ready(function(){\r\n");
      out.write("               //메뉴닫아주기\r\n");
      out.write("               $(\".dropB\").find(\"p\").click(function(){\r\n");
      out.write("                   $(\".dropB\").css(\"display\", \"none\");\r\n");
      out.write("               });\r\n");
      out.write("          \r\n");
      out.write("           });\r\n");
      out.write("\r\n");
      out.write("           //메뉴닫기\r\n");
      out.write("           $(document).ready(function(){\r\n");
      out.write("               $(\".close\").click(function(){\r\n");
      out.write("                  var inputs = document.getElementsByClassName(\"delB\");\r\n");
      out.write("                   for(var i = 0 ; i<inputs.length ; i++){\r\n");
      out.write("                       inputs[i].value = \"\";\r\n");
      out.write("                   }\r\n");
      out.write("\r\n");
      out.write("               //수정모달 닫으면서 view모달 켜주기\r\n");
      out.write("               if(needBool){\r\n");
      out.write("\t               \tviewSchedule(needDate);\r\n");
      out.write("\t\t\t\t\t$(\"#viewSchedule\").modal(\"show\");\r\n");
      out.write("                 }\r\n");
      out.write("           \r\n");
      out.write("                    $(\".dropB\").css(\"display\", \"none\");\r\n");
      out.write("               })\r\n");
      out.write("          \r\n");
      out.write("           });\r\n");
      out.write("\r\n");
      out.write("            var today = new Date();\r\n");
      out.write("            \r\n");
      out.write("\r\n");
      out.write("            //캘린더만들기\r\n");
      out.write("            function drawCalendar(Y, M){\r\n");
      out.write("                \r\n");
      out.write("                //테이블찾기\r\n");
      out.write("                var $tblB = $(\".tableB\");\r\n");
      out.write("                \r\n");
      out.write("                //그려줄 테이블\r\n");
      out.write("                var htmlB = \"\";\r\n");
      out.write("                \r\n");
      out.write("                //이달 첫째날\r\n");
      out.write("                var firstDate = new Date();\r\n");
      out.write("                firstDate.setDate(1);\r\n");
      out.write("               \r\n");
      out.write("                //월 컨트롤러 ->추후에 < > 버튼으로 달력이동 가능하게해야함\r\n");
      out.write("                if(M != null){\r\n");
      out.write("                    firstDate.setMonth(M);\r\n");
      out.write("                }\r\n");
      out.write("                if(Y != null){\r\n");
      out.write("                    firstDate.setFullYear(Y);\r\n");
      out.write("                }\r\n");
      out.write("               \r\n");
      out.write("                //월 첫째요일\r\n");
      out.write("                var firstDay = firstDate.getDay();\r\n");
      out.write("\r\n");
      out.write("                //td 아이디값으로 줄 날짜정보\r\n");
      out.write("                var yB = firstDate.getFullYear();\r\n");
      out.write("                var MB = firstDate.getMonth()+1;\r\n");
      out.write("                var dB = firstDate.getDate();\r\n");
      out.write("                \r\n");
      out.write("                //월별 마지막날짜\r\n");
      out.write("                var lastMonth = new Array(31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31);\r\n");
      out.write("                var lastDate = 0;\r\n");
      out.write("                //윤년일 때 2월 29일\r\n");
      out.write("                if(firstDate.getUTCFullYear()%4==0){\r\n");
      out.write("                    lastMonth[1] = 29;\r\n");
      out.write("                }\r\n");
      out.write("              \r\n");
      out.write("                //마지막날짜 찾기\r\n");
      out.write("                for(var i = 0 ; i < lastMonth.length;i++){\r\n");
      out.write("                    if(firstDate.getMonth() == i){\r\n");
      out.write("                        lastDate = lastMonth[i];\r\n");
      out.write("                        console.log(lastDate);\r\n");
      out.write("                    }\r\n");
      out.write("\r\n");
      out.write("                }\r\n");
      out.write("                //연/월 정보\r\n");
      out.write("                var info = document.getElementsByClassName(\"infoB\")[0];\r\n");
      out.write("                info.innerHTML =\"<button class='btn btn-info' onclick='drawCalendar();'>오늘날짜보기</button>\"\r\n");
      out.write("                                + \"<h1 class='yearBB'>\"+firstDate.getFullYear()+\"</h1><br/>\"\r\n");
      out.write("                                + \"<h2 class='monthBB'><button id='prevB' onclick='prevCalendar(\"+firstDate.getMonth()+\");'><img src='");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/images/L.png'></button>\"\r\n");
      out.write("                                + \"<p id='monthB'>\"+(firstDate.getMonth()+1)+\"월</p>\"\r\n");
      out.write("                                + \"<button id='nextB' onclick='nextCalendar(\"+firstDate.getMonth()+\");'><img src='");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/images/R.png'></button></h2><br/>\";\r\n");
      out.write("                \r\n");
      out.write("                //요일정보\r\n");
      out.write("                htmlB+= \"<tr><th scope='col' class='sun'>sun</th><th scope='col'>mon</th><th scope='col'>tue</th><th scope='col'>wed</th><th scope='col'>thu</th><th scope='col'>fri</th><th scope='col' class='sat'>sat</th></tr>\";\r\n");
      out.write("\r\n");
      out.write("                \r\n");
      out.write("                //달력짜기\r\n");
      out.write("            for(var i = 0 ; i < 6 ; i++){\r\n");
      out.write("                htmlB+=\"<tr>\";           \r\n");
      out.write("                    for(var j = 0 ; j <7 ; j++){\r\n");
      out.write("                        //첫째날 요일 맞춰주기\r\n");
      out.write("                        if(i==0 && j < firstDay){\r\n");
      out.write("                            htmlB+=\"<td class='Bday-non'></td>\";\r\n");
      out.write("                            continue;\r\n");
      out.write("                        }\r\n");
      out.write("                        //막날 요일 채워주기\r\n");
      out.write("                        if(dB>lastDate){\r\n");
      out.write("                            htmlB+=\"<td class='Bday-non'></td>\";\r\n");
      out.write("                            continue;\r\n");
      out.write("                        }\r\n");
      out.write("\r\n");
      out.write("                        htmlB+=\"<td class='Bday \";\r\n");
      out.write("                        \r\n");
      out.write("                        //일,토 색상처리\r\n");
      out.write("                        if(j==0){\r\n");
      out.write("                            htmlB += \"sun\";\r\n");
      out.write("                        }else if(j==6){\r\n");
      out.write("                            htmlB += \"sat\";\r\n");
      out.write("                        }\r\n");
      out.write("                        \r\n");
      out.write("                        htmlB+=\"' id='\"+yB+\"-\"+(MB < 10 ? \"0\"+MB : MB )+\"-\"+ (dB < 10 ? \"0\"+dB : dB ) +\"'><div class='highSpan'> \"+(dB++)+\"</div></td>\";\r\n");
      out.write("                    }\r\n");
      out.write("                    htmlB+=\"</tr>\";\r\n");
      out.write("\r\n");
      out.write("                }\r\n");
      out.write("\r\n");
      out.write("            \t//달력완성\r\n");
      out.write("                $tblB.empty().append(htmlB);\r\n");
      out.write("\r\n");
      out.write("                //오늘날짜에 id 추가하기\r\n");
      out.write("                var today = new Date();\r\n");
      out.write("                if(firstDate.getFullYear() == today.getFullYear() && firstDate.getMonth()==today.getMonth()){\r\n");
      out.write("                    today = moment(new Date()).format(\"YYYY-MM-DD\");\r\n");
      out.write("                    var toid = document.getElementById(today).firstChild;\r\n");
      out.write("                    toid.setAttribute(\"id\", \"thisday\");\r\n");
      out.write("                }\r\n");
      out.write("\r\n");
      out.write("                //리스너 달아주기\r\n");
      out.write("                var eventB = document.getElementsByClassName(\"Bday\");\r\n");
      out.write("                    for(var i = 0 ; i < eventB.length ; i++){\r\n");
      out.write("                    eventB[i].addEventListener(\"click\", function(){\r\n");
      out.write("                       mouseEvents(this, event);\r\n");
      out.write("\r\n");
      out.write("                    }, false);\r\n");
      out.write("                }\r\n");
      out.write("\r\n");
      out.write("                    //스케줄넣어주기\r\n");
      out.write("                    if(schedules.length>0){\r\n");
      out.write("                        scheduling();\r\n");
      out.write("\r\n");
      out.write("                    }\r\n");
      out.write("\r\n");
      out.write("                }\r\n");
      out.write("\r\n");
      out.write("                function scheduling(){\r\n");
      out.write("\r\n");
      out.write("                \t\r\n");
      out.write("\t\t\t\t\tif(schedules.length > 0){\r\n");
      out.write("\t\t\t\t\t\tvar cnt = 0;\r\n");
      out.write("\t\t\t\t\t\tvar thisTd;\r\n");
      out.write("\t\t\t\t\t\tvar cnt = 0;\r\n");
      out.write("\t\t\t\t\t\tvar arrays = [];\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t//for\r\n");
      out.write("\t\t\t\t\t\tfor(var i = 0 ; i < schedules.length ; i++){\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t//디데이부터 빼주기\r\n");
      out.write("\t\t\t\t\t\t\tif(schedules[i].dYN == \"Y\"){\r\n");
      out.write("\t\t\t\t\t\t\t\t$(\"[name=DYN]\").attr(\"disabled\", true).next().empty().append(\"디데이가 이미 등록되어 있습니다.\").css(\"color\", \"grey\");\r\n");
      out.write("\t                          }\r\n");
      out.write("\r\n");
      out.write("\t                          var sts = $(\"#\"+schedules[i].startDate);\r\n");
      out.write("\t                          var firstDate = schedules[i].startDate.substr(8);\r\n");
      out.write("\t                          \r\n");
      out.write("\t                          var htmlBB = \"\";\r\n");
      out.write("\r\n");
      out.write("\t                          //일정 출력해주기\r\n");
      out.write("\t\t                      if(sts!=null){\r\n");
      out.write("\r\n");
      out.write("\t\t                      \t\tif(!(schedules[i].dYN==\"N\" && schedules[i].scheduleYN ==\"N\")){\t                          \r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t                        \thtmlBB += \"<div style='background-color:\"+schedules[i].colorCode+\";'>\";\r\n");
      out.write("\t\r\n");
      out.write("\t\t                        \tif(firstDate == \"01\" || i==0 || (i>=1 && schedules[i-1].no != schedules[i].no)){\r\n");
      out.write("\t\r\n");
      out.write("\t\t                        \t\thtmlBB += schedules[i].content;\r\n");
      out.write("\t\t\t                          }\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t                        \thtmlBB += \"</div>\";\r\n");
      out.write("\t\t                      \t\t}\r\n");
      out.write("\t\t                      \t\t\r\n");
      out.write("\t\t                      \t//To do List 날짜 배열화\r\n");
      out.write("\t\t\t\t\t\t\t\tif(schedules[i].dYN==\"N\" && schedules[i].scheduleYN ==\"N\")\r\n");
      out.write("\t\t                      \t\tarrays.push(schedules[i].startDate);\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\tsts.append(htmlBB);\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t             }\r\n");
      out.write("\r\n");
      out.write("\t\t\t             if(arrays == null)\r\n");
      out.write("\t\t\t\t             return;\r\n");
      out.write("\t\t\t             \r\n");
      out.write("\t\t\t             \t//todo 중복날짜 필터링\r\n");
      out.write("\t\t\t\t\t\t\tvar startArrays = arrays.filter(function(item, i, a){\r\n");
      out.write("\t\t\t\t\t\t\t\treturn i==a.indexOf(item);\r\n");
      out.write("\t\t\t\t\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t//todo 일정출력\r\n");
      out.write("\t\t\t\t\t\t\tfor(var i = 0 ; i<startArrays.length ; i++){\r\n");
      out.write("\t\t\t\t\t\t\t\t$(\"#\"+startArrays[i]).append(\"<div class= 'to-doB' style='background-color:skyblue; color: white;'> To do List </div>\");\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t             \r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("                }\r\n");
      out.write("\r\n");
      out.write("                \r\n");
      out.write("\t\t\t\t\t\t\t\t//날짜포함 4개이상은 없애주기\r\n");
      out.write("\t\t\t\t\t\t\t/* \tthisTd = $(\"#\"+schedules[i].startDate);\r\n");
      out.write("\t\t\t\t\t\t\t\tvar thisDivs = $(\"#\"+schedules[i].startDate).children(\"div\");\r\n");
      out.write("\t\t\t\t\t\t\t\tvar len = thisDivs.length;\r\n");
      out.write("\t\t\t\t\t\t\t\tconsole.log(thisDivs);\r\n");
      out.write("\t\t\t\t\t\t\t\tconsole.log(len);\r\n");
      out.write("\t\t\t\t\t\t\t\tvar cnt = len-3;\r\n");
      out.write("\t\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t\tif(len > 4){\r\n");
      out.write("\t\t\t\t\t\t\t\t\tthisDivs.nextAll(\"div:nth-child(3)\").remove();\r\n");
      out.write("\t\t\t\t\t\t\t\t} */\r\n");
      out.write("\t\r\n");
      out.write("\t\t\t\t\t\t\t//thisTd.append(\"<div style='background-color:white;'> +\"+cnt+\" </div>\")\r\n");
      out.write("\r\n");
      out.write("            \r\n");
      out.write("            //다음달력\r\n");
      out.write("            function nextCalendar(M){\r\n");
      out.write("                var Y = Number(document.getElementsByClassName(\"yearBB\")[0].innerHTML);\r\n");
      out.write("                M += 1;\r\n");
      out.write("                if(M == 12){\r\n");
      out.write("                    Y+=1;\r\n");
      out.write("                }\r\n");
      out.write("                drawCalendar(Y, M);\r\n");
      out.write("            }\r\n");
      out.write("            //이전달력\r\n");
      out.write("            function prevCalendar(M){\r\n");
      out.write("                var Y = Number(document.getElementsByClassName(\"yearBB\")[0].innerHTML);\r\n");
      out.write("                M -= 1;\r\n");
      out.write("                if(M == -1){\r\n");
      out.write("                    Y-=1;\r\n");
      out.write("                }\r\n");
      out.write("                drawCalendar(Y, M);\r\n");
      out.write("                \r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            //오늘날짜보기\r\n");
      out.write("                $(\".viewTodayB\").click(function(){\r\n");
      out.write("                    var today = new Date();\r\n");
      out.write("                    drawCalendar(today.getFullYear(), today.getMonth());\r\n");
      out.write("                    \r\n");
      out.write("                });    \r\n");
      out.write("                \r\n");
      out.write("                //메뉴 나타나게하기\r\n");
      out.write("                function mouseEvents(e, event){\r\n");
      out.write("                     console.log(e.id);\r\n");
      out.write("                     //마우스좌표\r\n");
      out.write("                    var x = event.pageX;\r\n");
      out.write("                    var y = event.pageY;\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t//메뉴보여주기\r\n");
      out.write("                    $(\".dropB\").css(\"display\", \"none\").css(\"left\", x).css(\"top\", y+20).css(\"display\", \"block\");\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t//서브메뉴에 날짜값 넣어주기\r\n");
      out.write("\t\t\t\t\t$(\".dropB\").children().attr(\"value\", e.id);\r\n");
      out.write("                    \r\n");
      out.write("\t\t\t\t\r\n");
      out.write("                }\r\n");
      out.write("\r\n");
      out.write("\t\t\r\n");
      out.write("        </script>\r\n");
      out.write("        \r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/WEB-INF/views/common/footer.jsp", out, false);
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_fmt_005frequestEncoding_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:requestEncoding
    org.apache.taglibs.standard.tag.rt.fmt.RequestEncodingTag _jspx_th_fmt_005frequestEncoding_005f0 = (org.apache.taglibs.standard.tag.rt.fmt.RequestEncodingTag) _005fjspx_005ftagPool_005ffmt_005frequestEncoding_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.RequestEncodingTag.class);
    boolean _jspx_th_fmt_005frequestEncoding_005f0_reused = false;
    try {
      _jspx_th_fmt_005frequestEncoding_005f0.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005frequestEncoding_005f0.setParent(null);
      // /WEB-INF/views/scheduler/scheduler.jsp(6,0) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005frequestEncoding_005f0.setValue("utf-8");
      int _jspx_eval_fmt_005frequestEncoding_005f0 = _jspx_th_fmt_005frequestEncoding_005f0.doStartTag();
      if (_jspx_th_fmt_005frequestEncoding_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005frequestEncoding_0026_005fvalue_005fnobody.reuse(_jspx_th_fmt_005frequestEncoding_005f0);
      _jspx_th_fmt_005frequestEncoding_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005frequestEncoding_005f0, _jsp_getInstanceManager(), _jspx_th_fmt_005frequestEncoding_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f0 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f0_reused = false;
    try {
      _jspx_th_c_005fif_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f0.setParent(null);
      // /WEB-INF/views/scheduler/scheduler.jsp(26,0) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ not empty sche }", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f0 = _jspx_th_c_005fif_005f0.doStartTag();
      if (_jspx_eval_c_005fif_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("<script>\r\n");
          out.write("\t$(document).ready(function(){\r\n");
          out.write("\r\n");
          out.write("\t\t$('#viewSchedule').modal(\"show\");\r\n");
          out.write("\r\n");
          out.write("\t\tif(\"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ M }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("\" < 9){\r\n");
          out.write("\t\t\tviewSchedule(\"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ Y }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write('-');
          out.write('0');
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ M+1 }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write('-');
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ D }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("\");\r\n");
          out.write("\t\t\treturn;\r\n");
          out.write("\t\t}\r\n");
          out.write("\t\tviewSchedule(\"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ Y }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write('-');
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ M+1 }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write('-');
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ D }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("\");\r\n");
          out.write("\t\t\r\n");
          out.write("\t\t});\r\n");
          out.write("</script>\r\n");
          int evalDoAfterBody = _jspx_th_c_005fif_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f0);
      _jspx_th_c_005fif_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f1 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f1_reused = false;
    try {
      _jspx_th_c_005fif_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f1.setParent(null);
      // /WEB-INF/views/scheduler/scheduler.jsp(42,0) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f1.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ not empty todo }", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f1 = _jspx_th_c_005fif_005f1.doStartTag();
      if (_jspx_eval_c_005fif_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("<script>\r\n");
          out.write("\t$(document).ready(function(){\r\n");
          out.write("\r\n");
          out.write("\t\t$('#viewTodoList').modal(\"show\");\r\n");
          out.write("\r\n");
          out.write("\t\tif(\"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ M }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("\" < 9){\r\n");
          out.write("\t\t\tviewTodoList(\"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ Y }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write('-');
          out.write('0');
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ M+1 }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write('-');
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ D }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("\");\r\n");
          out.write("\t\t\treturn;\r\n");
          out.write("\t\t}\r\n");
          out.write("\t\tviewTodoList(\"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ Y }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write('-');
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ M+1 }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write('-');
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ D }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("\");\r\n");
          out.write("\t\t\r\n");
          out.write("\t\t});\r\n");
          out.write("</script>\r\n");
          int evalDoAfterBody = _jspx_th_c_005fif_005f1.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f1);
      _jspx_th_c_005fif_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fforEach_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f0 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    boolean _jspx_th_c_005fforEach_005f0_reused = false;
    try {
      _jspx_th_c_005fforEach_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fforEach_005f0.setParent(null);
      // /WEB-INF/views/scheduler/scheduler.jsp(590,11) name = items type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setItems(new org.apache.jasper.el.JspValueExpression("/WEB-INF/views/scheduler/scheduler.jsp(590,11) '${ list }'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${ list }",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      // /WEB-INF/views/scheduler/scheduler.jsp(590,11) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setVar("sch");
      int[] _jspx_push_body_count_c_005fforEach_005f0 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fforEach_005f0 = _jspx_th_c_005fforEach_005f0.doStartTag();
        if (_jspx_eval_c_005fforEach_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\r\n");
            out.write("           new schedule(\"");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ sch.no }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\", \"");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ sch.srNo }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\", \"");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ sch.startDate }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\", \"");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ sch.endDate }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\", \"");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ sch.content }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\", \"");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ sch.colorCode }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\", \"");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ sch.scheduleYN }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\", \"");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ sch.timeOpt }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\", \"");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ sch.DYN }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\", \"");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ sch.enabledYN }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\"),\r\n");
            out.write("           ");
            int evalDoAfterBody = _jspx_th_c_005fforEach_005f0.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fforEach_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fforEach_005f0[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fforEach_005f0.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fforEach_005f0.doFinally();
      }
      _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f0);
      _jspx_th_c_005fforEach_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fforEach_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fforEach_005f0_reused);
    }
    return false;
  }
}
